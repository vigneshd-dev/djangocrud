name: 🚀 Auto Semantic Versioning & Tagging

permissions:
  contents: write

on:
  pull_request:
    branches:
      - main
      - release
      - develop
      - 'hotfix/*'
      - 'bugfix/*'
    types: [closed]

jobs:
  auto-tag:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout with GH_PAT
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}
          persist-credentials: false
          fetch-depth: 0

      - name: 🔍 Get latest tag
        id: get_latest_tag
        run: |
          latest=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
          echo "latest=$latest" >> $GITHUB_OUTPUT

      - name: 📈 Determine next version
        id: bump_version
        run: |
          latest="${{ steps.get_latest_tag.outputs.latest }}"
          IFS='.' read -r major minor patch <<< "$latest"

          base="${{ github.base_ref }}"
          head="${{ github.head_ref }}"

          echo "Base: $base"
          echo "Head: $head"

          if [[ "$base" == "main" ]]; then
            major=$((major + 1)); minor=0; patch=0
          elif [[ "$base" == "release" ]]; then
            minor=$((minor + 1)); patch=0
          elif [[ "$base" == "develop" && "$head" == feature/* ]]; then
            minor=$((minor + 1)); patch=0
          elif [[ "$head" == hotfix/* || "$head" == bugfix/* ]]; then
            patch=$((patch + 1))
          else
            echo "❌ No matching versioning rule."
            exit 1
          fi

          new_tag="$major.$minor.$patch"
          echo "tag=$new_tag" >> $GITHUB_OUTPUT
          echo "✅ Next version: $new_tag"

      - name: 🛠 Configure Git
        run: |
          git config user.name "vigneshd.dev"
          git config user.email "vigneshd.dev@gmail.com"

      - name: 🏷 Create and Push Tag
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          tag="${{ steps.bump_version.outputs.tag }}"
          echo "🚀 Tagging as: $tag"
          
          git config --local --unset-all http.https://github.com/.extraheader || true

          if git rev-parse "$tag" >/dev/null 2>&1; then
            echo "⚠️ Tag $tag already exists. Skipping tag."
            exit 0
          fi

          git tag "$tag"
          git push https://vigneshd-dev:${GH_PAT}@github.com/${{ github.repository }} "refs/tags/$tag"
          echo "✅ Tag $tag pushed successfully."
