name: 🚀 Auto Semantic Versioning & Tagging (PR-Based)

on:
  pull_request:
    branches:
      - main
      - release
      - develop
      - 'hotfix/*'
      - 'bugfix/*'
    types: [closed]

jobs:
  auto-tag:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Enable debug mode
        run: set -x

      - name: Checkout full git history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Print debug info
        run: |
          echo "🔀 Base branch (merged into): ${{ github.base_ref }}"
          echo "🔁 Head branch (PR source): ${{ github.head_ref }}"
          echo "🔖 GH_PAT set: ${{ secrets.GH_PAT != '' }}"

      - name: Get latest tag
        id: get_latest_tag
        run: |
          latest=$(git describe --tags --abbrev=0 2>/dev/null || echo "0.0.0")
          echo "latest=$latest" >> $GITHUB_OUTPUT
          echo "🔖 Latest tag: $latest"

      - name: Determine next version
        id: bump_version
        run: |
          latest="${{ steps.get_latest_tag.outputs.latest }}"
          IFS='.' read -r major minor patch <<< "$latest"

          branch="${{ github.base_ref }}"

          if [[ "$branch" == "main" ]]; then
            major=$((major + 1)); minor=0; patch=0
          elif [[ "$branch" == "release" ]]; then
            minor=$((minor + 1)); patch=0
          elif [[ "$branch" == hotfix/* || "$branch" == bugfix/* ]]; then
            patch=$((patch + 1))
          else
            minor=$((minor + 1)); patch=0
          fi

          new_tag="$major.$minor.$patch"
          echo "tag=$new_tag" >> $GITHUB_OUTPUT
          echo "🎯 New tag to push: $new_tag"

      - name: Configure Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Create and push tag
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          tag="${{ steps.bump_version.outputs.tag }}"

          if git rev-parse "$tag" >/dev/null 2>&1; then
            echo "❌ Tag $tag already exists. Skipping."
            exit 1
          fi

          echo "✅ Creating tag: $tag"
          git tag "$tag"
          git push https://x-access-token:${GH_PAT}@github.com/${{ github.repository }} "refs/tags/$tag"  
